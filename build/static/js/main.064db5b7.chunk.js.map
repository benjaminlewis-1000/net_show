{"version":3,"sources":["params.js","switcher.js","App.js","serviceWorker.js","index.js"],"names":["store","set","Switcher","props","idx_tok","base_url","image_ids","length","url_tik","img_access_key","url_tok","duration_css","slide_len","state","idx_tik","index","move","tiktok","css","construct_url","bind","idx","this","next_idx","getNextIndex","setState","next_url","interval","setInterval","tick","clearInterval","className","src","alt","style","React","Component","shuffle","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","App","login","a","login_token","Promise","resolve","reject","setTimeout","axiosInstance","post","token_url","username","password","headers","then","response","data","access","replace","getAccessKey","get","param_url","param_error","console","log","catch","err","getList","list_url","imlist_error","search","window","location","params","URLSearchParams","help","axios","create","timeout","loading","changeImage","document","body","backgroundColor","first_img","image_url","imageIndex","newIdx","new_img","size","color","source","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.064db5b7.chunk.js","sourcesContent":["\n\nimport store from 'store';\n\n\nstore.set('username', 'benjamin');\nstore.set('pass', 'L0TRswhp');\n","import React from 'react';\nimport './image.css';\n\n\nclass Switcher extends React.Component {\n  constructor(props) {\n    super(props);\n    var idx_tik = 0;\n    var idx_tok = 0\n    const base_url = props.base_url + 'api/keyed_image/slideshow/?id='\n    if (props.image_ids.length > 1){\n      idx_tok = 1;\n    }\n\n    const url_tik = base_url  + props.image_ids[0] + '&access_key=' + props.img_access_key \n    const url_tok = base_url  + props.image_ids[idx_tok] + '&access_key=' + props.img_access_key \n    const duration_css = {\"animationDuration\": props.slide_len * 2 + \"s\"}\n\n    this.state = {\n      idx_tik: idx_tik,\n      url_tik: url_tik,\n      idx_tok: idx_tok,\n      url_tok: url_tok,\n      index: idx_tok,\n      move: false,\n      image_ids: props.image_ids,\n      img_access_key: props.img_access_key,\n      base_url: base_url,\n      tiktok : false,\n      slide_len: props.slide_len,\n      css: duration_css\n    };\n    \n    this.construct_url = this.construct_url.bind(this)\n  }\n\n  getNextIndex(idx) {\n    if (idx >= this.state.image_ids.length - 1) {\n      return 0;\n    }\n    return idx + 1;\n  }\n\n  construct_url(idx){\n    const url = this.state.base_url + this.props.image_ids[idx] + '&access_key=' + this.state.img_access_key\n    return url\n  }\n\n  tick() {\n\n    var next_idx = this.getNextIndex(this.state.index)\n    this.setState({index: next_idx})\n    const next_url = this.construct_url(next_idx)\n    if (this.state.tiktok) {\n      this.setState({idx_tik: next_idx })\n      this.setState({url_tik: next_url })\n    }\n    else{\n      this.setState({idx_tok: next_idx })\n      this.setState({url_tok: next_url })\n    }\n    this.setState({tiktok : !this.state.tiktok})\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.tick(), this.state.slide_len * 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return (\n      <div className=\"mask\">\n        <div className=\"pic-wrapper\">         \n         <img className={this.state.tiktok? 'hidden' : 'visible'} src={this.state.url_tik} alt=\"\" style={this.state.css}/>          \n         <img className={!this.state.tiktok? 'hidden' : 'visible'} src={this.state.url_tok} alt=\"\" style={this.state.css}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Switcher;\n","import React from 'react';\nimport './App.css';\nimport store from 'store';\nimport axios from 'axios';\nimport './params.js';\n// import CrossfadeImage from \"./crossfade\";\nimport CircleLoader from \"react-spinners/CircleLoader\";\nimport Switcher from \"./switcher\"\n\nstore.set('base_url', 'https://picasa.exploretheworld.tech/');\n\n\nfunction shuffle(array) {\n  var currentIndex = array.length, temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    // console.log(headers)\n    let search = window.location.search;\n    // console.dir(window);\n    // console.log(search)\n    let params = new URLSearchParams(search);\n    var slide_len = params.get('slide_len');\n    if (slide_len === null){\n      slide_len = 6;\n    }\n\n//   if (params.get('height') !== null){\n//        height= params.get('height')\n//    }\n\n    if (params.get('help') === null){\n      var help=false;\n    }else{\n      help=true;\n    }\n\n    const base_url = store.get('base_url')\n\n    const axiosInstance = axios.create({\n        // baseURL: api_url,\n        timeout: 60000,\n        headers: {\n            'Authorization': 'TBD',\n            'Content-Type': 'application/json',\n            'accept': 'application/json'\n        }\n    });\n\n    this.state = {\n      password: store.get('pass'),\n      username: store.get('username'),\n      token_url: base_url + 'api/token/obtain/',\n      param_url: base_url + \"api/parameters\",\n      list_url: base_url + \"api/image_list/\" + search,\n      // list_url: base_url + \"api/image_list/?people=Jessica Lewis\",\n      base_url: base_url,\n      loading: true,\n      axiosInstance: axiosInstance,\n      slide_len: slide_len,\n      help: help,\n      shuffle: params.get('cronological') === null\n    };\n\n    this.changeImage = this.changeImage.bind(this);\n\n  }\n\n  login = async () => {\n\n    const login_token = new Promise((resolve, reject) => {\n      setTimeout(() => \n        { \n           \n          this.state.axiosInstance.post(this.state.token_url, {\n              username: this.state.username,\n              password: this.state.password\n          },{\n            headers: {\n              'content-type': 'application/json'\n            }\n          })\n          .then(response => {\n            store.set('access_token',  'JWT ' + response.data.access.replace(/['\"]+/g, '') )\n\n            this.setState({username: 'removed' })\n            this.setState({password: 'removed' })\n            return resolve();\n            }\n          )\n        }\n      , 1000)\n     });\n\n    return login_token\n\n    \n  }\n\n  getAccessKey = async() => {\n\n    const a = new Promise((resolve, reject) => {\n      this.state.axiosInstance.get(this.state.param_url, {\n        headers : {\n          'Authorization': store.get('access_token'),\n        }\n      })\n      .then( (response) => {\n        // this.state.img_access_key = response.data['random_access_key']\n        this.setState({img_access_key: response.data['random_access_key'] })\n        // console.log(this.state.img_access_key)\n        return resolve();\n      }, (param_error) => {\n        console.log(param_error)\n      }).catch(err => {\n          console.log(err)\n      });\n\n    });\n\n    return await a;\n  }\n\n  getList = async() => {\n\n    const a = new Promise((resolve, reject) => {\n\n      this.state.axiosInstance.get(this.state.list_url, {\n        headers : {\n          'Authorization': store.get('access_token'),\n        }\n      })\n      .then( (response) => {\n        // this.state.image_ids =  response.data['url_keys']\n        var image_ids = response.data['url_keys']\n        console.log(image_ids.length)\n        if (this.state.shuffle){\n          shuffle(image_ids)  \n        }\n        this.setState({image_ids: image_ids})\n        return resolve();\n      }, (imlist_error) => {\n        console.log(imlist_error)\n      }).catch(err => {\n          console.log(err)\n      });\n\n    });\n\n    return await a;\n  }\n\n\n   componentDidMount() {\n      // this.getURLs() //.then( ()=> {console.log(\"hi\")})\n\n      document.body.style.backgroundColor = \"#e4ede6\";\n      this.login().then( () => {\n        this.getList().then(  () => {\n          this.getAccessKey().then( () => {\n\n            var first_img = this.state.base_url + 'api/keyed_image/slideshow/?id=' + this.state.image_ids[0] + '&access_key=' + this.state.img_access_key\n            this.setState({image_url: first_img})\n            this.setState({imageIndex: 0})\n            this.setState({loading: false})\n            // document.body.style.backgroundColor = \"gray\";\n            if (! this.state.help ){\n              document.body.style.backgroundColor = \"black\";\n            }\n          })\n        })\n      })\n\n   }\n\n  changeImage() {\n    if (this.state.imageIndex === this.state.image_ids.length - 1) {\n      var newIdx = 0\n    } else {\n      newIdx = this.state.imageIndex + 1;\n    }\n    var new_img = this.state.base_url + 'api/keyed_image/slideshow/?id=' + this.state.image_ids[newIdx] + '&access_key=' + this.state.img_access_key\n    this.setState({image_url: new_img})\n    this.setState({ imageIndex: newIdx });\n  }\n\n  render(){\n\n  //   return (\n  //   <div className=\"App\">\n  //     <header className=\"App-header\">\n  //       <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //       <p>\n  //         Edit <code>src/App.js</code> and save to reload.\n  //       </p>\n  //       <a\n  //         className=\"App-link\"\n  //         href=\"https://reactjs.org\"\n  //         target=\"_blank\"\n  //         rel=\"noopener noreferrer\"\n  //       >\n  //         Learn React\n  //       </a>\n  //     </header>\n  //   </div>\n  // );\n  // }\n  // const defaultStyle = { height: '100vh'};\n    return (\n      // {this.state.help ? (\n      //   <div></div>\n      //   ) : (\n            // {this.state.loading ? (\n            //   <div className=\"loader\"></div>\n            // ) : (\n            //   <div ></div>\n            // )}\n          <div>\n            {this.state.help ? (\n              <div className=\"loader\">\n              <p>Hey there! You are looking for help. </p>\n              <p>A few commands. You can pass URL parameters (after /?) with the following: </p>\n              <p>people=&lt;a comma-separated list of people&gt;</p>\n              <p>slide_len=&lt;length of each slide in seconds&gt;</p>\n              <p>help -- this page</p>\n              <p>year_start=&lt;year&gt; and/or year_end=&lt;year&gt;</p>\n              <p>No arguments -- Slideshow of all photos</p>\n              <p>cronological -- Photos stay in chronological order</p>\n              </div>\n            ) : (\n\n            <div >\n              {this.state.loading ? (\n                <div className=\"loader\">\n                  <CircleLoader\n                  // css={override}\n                  size={250}\n                  color={\"#993333\"}\n                  loading={this.state.loading}\n                  />\n                </div>\n              ) : (\n                <div >\n                  <Switcher \n                    source={this.state.image_url}\n                    image_ids={this.state.image_ids}\n                    img_access_key={this.state.img_access_key}\n                    base_url={this.state.base_url}\n                    slide_len={this.state.slide_len}\n                  />\n                </div>\n              )}\n              </div>\n\n            )}\n          </div>\n\n          \n      // )}\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}